# use anchors from another file to avoid repetition
!exclude _: !include rf/build-s01-p02.yaml
!exclude _: !include rf/build-s01-intel.yaml
spack:
  # CUSTOM MODULES
  # these modifications blacklist the system compiler to make Core packages
  # this streamlines the lmod tree that we expose to the users
  view: false
  config:
    module_roots: 
      lmod: ./lmod
  modules: *modules
  # EXTERNAL packages
  # note that we are using compilers built by spack above and for now neglecting to mark them external
  packages:
    slurm:
      buildable: false
      externals:
      - prefix: /cm/shared/apps/slurm/current
        spec: slurm@19.05.7
  # beware that we use lists of lists
  specs: !flatten
  - - - *ips
  - - - *gcc10
  - *gcc-all
  # define the oneapi compiler so it appears as a module
  - - !compiled
      compiler: &intel oneapi@2021.1
      specs: *gcc-specs
  - &intel-all
    # intel Python
    - !compiled
      compiler: *intel
      specs:
      - &py399i !cat [python@3.9.9, *pybase]
      - &py3812i !cat [python@3.8.12, *pybase]
      #! error with r%oneapi "arithmetic.c:68:16: error: incomplete definition of type 'struct exception'"
      #! - &r412i !cat [r@4.1.2, !spec {depends: *py399i}]
    # packages compiled for python 3.9.9
    - !loop_depends
      base: *py399i 
      specs: *py-mods
    # packages compiled for Python 3.8.12
    - !loop_depends
      base: *py3812i
      specs: *py-mods
      #! see above
      #! # packages compiled for R 4.1.2
      #! - !loop_depends
      #!   # note that R depends on Python above which manages redundancy
      #!   base: *r412i
      #!   specs: *r-packages
